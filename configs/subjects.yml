subjects:
  - name: MeshCNN
    enabled: true
    task: classification_segmentation
    repo_url: https://github.com/ranahanocka/MeshCNN
    path: subjects_src/MeshCNN
    workdir: workdir/ShapeNet/MeshCNN
    pre_cmd: "source ~/miniconda3/etc/profile.d/conda.sh && conda activate meshcnn"
    commit: 5bf0b899d48eb204b9b73bc1af381be20f4d7df1
    entry_template:
      classification: "python train.py --dataroot ${DATASET:ShapeNet} --name ms1_meshcnn_cls --niter 1 --niter_decay 0 --save_epoch_freq 1 --batch_size 2"
      segmentation: "python train.py --dataroot ${DATASET:FAUST} --name ms1_meshcnn_seg --niter 1 --niter_decay 0 --save_epoch_freq 1 --batch_size 2"
    weights:
      classification: workdir/ShapeNet/MeshCNN/checkpoints/latest_net.pth
      segmentation: workdir/FAUST/MeshCNN/checkpoints/latest_net.pth
    datasets:
      - name: ShapeNet
        entry: classification
        workdir: workdir/ShapeNet/MeshCNN
      - name: FAUST
        entry: segmentation
        workdir: workdir/FAUST/MeshCNN

  - name: HodgeNet
    enabled: true
    task: spectral_classification
    repo_url: https://github.com/dmsm/HodgeNet
    path: subjects_src/HodgeNet
    workdir: workdir/ModelNet40/HodgeNet
    pre_cmd: "source ~/miniconda3/etc/profile.d/conda.sh && conda activate HodgeNet"
    commit: 6380f6ca78503817dfa152afd7af094ef5bc0dfe
    entry_template:
      eval: "python train_classification.py --out runs/ms1_eval --n_epochs 100 --bs 16 --data ${DATASET:ModelNet40}"
    datasets:
      - name: ModelNet40
        entry: eval
        workdir: workdir/ModelNet40/HodgeNet

  - name: MeshSDF
    enabled: true
    task: signed_distance_function
    repo_url: https://github.com/cvlab-epfl/MeshSDF
    path: subjects_src/MeshSDF
    workdir: workdir/ShapeNet/MeshSDF
    pre_cmd: "source ~/miniconda3/etc/profile.d/conda.sh && conda activate meshsdf"
    commit: a579c6610d2cb0d8cff84ec35ad1b424941b5eaa
    entry_template:
      svr: "python train_svr.py -e experiments/cars_svr --max_epoch 1 --batch_size 2 --data_root ${DATASET:ShapeNet}"
    datasets:
      - name: ShapeNet
        entry: svr
        workdir: workdir/ShapeNet/MeshSDF

  - name: Point2Mesh
    enabled: true
    task: surface_reconstruction
    repo_url: https://github.com/ranahanocka/point2mesh
    path: subjects_src/point2mesh
    workdir: workdir/COSEG/Point2Mesh
    pre_cmd: "source ~/miniconda3/etc/profile.d/conda.sh && conda activate point2mesh"
    commit: 333dba0b2ced97adfbdb62a5383d04bb5628680b
    auto_append_mesh: false
    entry_template:
      smoke: "python main.py --input-pc ./data/giraffe.ply --iterations 10 --save-path ../../workdir/COSEG/Point2Mesh/ms1_smoke_p2m_cpu"
      coseg_chair: |
        CUDA_VISIBLE_DEVICES="" python main.py \
          --input-pc ${MS_ROOT}/workdir/COSEG/Point2Mesh/coseg_ply/chairs/sample.ply \
          --initial-mesh ${MS_ROOT}/workdir/COSEG/Point2Mesh/coseg_ply/chairs/initmesh.obj \
          --iterations 160 \
          --export-interval 10 \
          --save-path ${MS_ROOT}/workdir/COSEG/Point2Mesh/ms1_coseg_chair/
      coseg_vase: |
        CUDA_VISIBLE_DEVICES="" python main.py \
          --input-pc ${MS_ROOT}/workdir/COSEG/Point2Mesh/coseg_ply/vases/sample.ply \
          --initial-mesh ${MS_ROOT}/workdir/COSEG/Point2Mesh/coseg_ply/vases/initmesh.obj \
          --iterations 160 \
          --export-interval 10 \
          --save-path ${MS_ROOT}/workdir/COSEG/Point2Mesh/ms1_coseg_vase/
      coseg_tele: |
        CUDA_VISIBLE_DEVICES="" python main.py \
          --input-pc ${MS_ROOT}/workdir/COSEG/Point2Mesh/coseg_ply/tele_aliens/sample.ply \
          --initial-mesh ${MS_ROOT}/workdir/COSEG/Point2Mesh/coseg_ply/tele_aliens/initmesh.obj \
          --iterations 160 \
          --export-interval 10 \
          --save-path ${MS_ROOT}/workdir/COSEG/Point2Mesh/ms1_coseg_tele/
    datasets:
      - name: COSEG
        entry: coseg_chair
        workdir: workdir/COSEG/Point2Mesh
      - name: COSEG
        entry: coseg_vase
        workdir: workdir/COSEG/Point2Mesh
      - name: COSEG
        entry: coseg_tele
        workdir: workdir/COSEG/Point2Mesh

  - name: MeshWalker
    enabled: true
    task: mesh_sequence_learning
    repo_url: https://github.com/AlonLahav/MeshWalker
    path: subjects_src/MeshWalker
    workdir: workdir/COSEG/MeshWalker
    pre_cmd: "source ~/miniconda3/etc/profile.d/conda.sh && conda activate meshwalker"
    commit: f3b73b1e165ec6598dc10826245df8d9b6c4d8eb
    entry_template:
      eval: "python train_val.py coseg chairs --epochs 1 --data_root ${DATASET:COSEG}"
    datasets:
      - name: COSEG
        entry: eval
        workdir: workdir/COSEG/MeshWalker

  - name: DeepGCNs
    enabled: true
    task: mesh_based_graph_convolution
    repo_url: https://github.com/lightaime/deep_gcns_torch
    path: subjects_src/deep_gcns_torch
    workdir: workdir/ModelNet40/DeepGCNs
    pre_cmd: "source ~/miniconda3/etc/profile.d/conda.sh && conda activate deepgcn"
    commit: 4f6681eee2290e217bda941b5536452a7c09decb
    entry_template:
      eval: "python examples/modelnet_cls/main.py --cfg examples/modelnet_cls/config.yaml --epochs 1 --batch_size 8 --data_root ${DATASET:ModelNet40}"
    adapter: mesh_to_point
    datasets:
      - name: ModelNet40
        entry: eval
        workdir: workdir/ModelNet40/DeepGCNs

  - name: GEM
    enabled: false
    task: geometry_encoding_segmentation
    repo_url: https://github.com/JchenXu/BoundaryAwareGEM
    path: subjects_src/BoundaryAwareGEM
    workdir: workdir/Human3.6M/GEM
    pre_cmd: "source ~/miniconda3/etc/profile.d/conda.sh && conda activate gem"
    commit: 5bbed1008cea1403490e4eb2352c900fc1f76bfd
    entry_template:
      eval: "CUDA_VISIBLE_DEVICES=0 python evaluate_scannet.py --model bagem_scannet --batch_size 2 --model_path checkpoints/bagem_scannet.ckpt --with_rgb --data_root ${DATASET:Human3.6M}"
    datasets:
      - name: Human3.6M
        entry: eval
        workdir: workdir/Human3.6M/GEM
        note: "Requires Human3.6M dataset download and license; enable after data is available."

  - name: SpiderCNN
    enabled: false
    task: mesh_classification
    repo_url: https://github.com/xyf513/SpiderCNN
    path: subjects_src/SpiderCNN
    workdir: workdir/ModelNet10/SpiderCNN
    pre_cmd: "source ~/miniconda3/etc/profile.d/conda.sh && conda activate spidercnn-tf1"
    commit: bd5acba4673742258f7c43dcb4c408a838a3db59
    notes: "Requires TensorFlow 1.3, CUDA 8, Python 2.7, and modelnet40_ply_hdf5_2048 dataset."
    entry_template:
      eval: "python train.py --eval --data_root ${DATASET:ModelNet10}"
    adapter: mesh_to_point
    datasets:
      - name: ModelNet10
        entry: eval
        workdir: workdir/ModelNet10/SpiderCNN
